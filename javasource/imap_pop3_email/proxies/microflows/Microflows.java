// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package imap_pop3_email.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the IMAP_POP3_email module
	public static boolean connectToEmailServer(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("IMAP_POP3_email.ConnectToEmailServer").withParams(params).execute(context);
	}
	public static imap_pop3_email.proxies.EmailAccount dS_DummyConfiguration(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("IMAP_POP3_email.DS_DummyConfiguration").withParams(params).execute(context);
		return result == null ? null : imap_pop3_email.proxies.EmailAccount.initialize(context, result);
	}
	public static java.util.List<imap_pop3_email.proxies.EmailMessage> dS_ReceiveEmails(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("IMAP_POP3_email.DS_ReceiveEmails").withParams(params).execute(context);
		java.util.List<imap_pop3_email.proxies.EmailMessage> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(imap_pop3_email.proxies.EmailMessage.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<imap_pop3_email.proxies.Folder> dSO_Folders(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("IMAP_POP3_email.DSO_Folders").withParams(params).execute(context);
		java.util.List<imap_pop3_email.proxies.Folder> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(imap_pop3_email.proxies.Folder.initialize(context, obj));
		}
		return result;
	}
	public static void iVK_CommitBatchDetails(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_CommitBatchDetails").withParams(params).execute(context);
	}
	public static void iVK_CommitServerDetails(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_CommitServerDetails").withParams(params).execute(context);
	}
	public static void iVK_ConfigStep1(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_ConfigStep1").withParams(params).execute(context);
	}
	public static void iVK_ConfigStep2(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_ConfigStep2").withParams(params).execute(context);
	}
	public static void iVK_DeleteAll(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_DeleteAll").withParams(params).execute(context);
	}
	public static void iVK_DeleteMail(IContext context, imap_pop3_email.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_DeleteMail").withParams(params).execute(context);
	}
	public static void iVK_FolderSelect(IContext context, imap_pop3_email.proxies.Folder _folder, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Folder", _folder == null ? null : _folder.getMendixObject());
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_FolderSelect").withParams(params).execute(context);
	}
	public static java.util.List<imap_pop3_email.proxies.EmailMessage> iVK_ReceiveEmails(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("IMAP_POP3_email.IVK_ReceiveEmails").withParams(params).execute(context);
		java.util.List<imap_pop3_email.proxies.EmailMessage> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(imap_pop3_email.proxies.EmailMessage.initialize(context, obj));
		}
		return result;
	}
	public static void iVK_RemoveConfiguration(IContext context, imap_pop3_email.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_RemoveConfiguration").withParams(params).execute(context);
	}
	public static void iVK_SaveAccount(IContext context, imap_pop3_email.proxies.EmailAccount _emailSettings)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailSettings", _emailSettings == null ? null : _emailSettings.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.IVK_SaveAccount").withParams(params).execute(context);
	}
	public static void oCh_EmailProtocol(IContext context, imap_pop3_email.proxies.EmailAccount _emailSettings)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailSettings", _emailSettings == null ? null : _emailSettings.getMendixObject());
		Core.microflowCall("IMAP_POP3_email.OCh_EmailProtocol").withParams(params).execute(context);
	}
	public static void sub_LogError(IContext context, system.proxies.Error _error, imap_pop3_email.proxies.EmailAccount _emailAccount, boolean _renderAsValidation)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Error", _error == null ? null : _error.getMendixObject());
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		params.put("RenderAsValidation", _renderAsValidation);
		Core.microflowCall("IMAP_POP3_email.Sub_LogError").withParams(params).execute(context);
	}
	public static boolean validateBatchDetails(IContext context, imap_pop3_email.proxies.EmailAccount _emailSettings)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailSettings", _emailSettings == null ? null : _emailSettings.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("IMAP_POP3_email.ValidateBatchDetails").withParams(params).execute(context);
	}
	public static boolean validateServerDetails(IContext context, imap_pop3_email.proxies.EmailAccount _emailSettings)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailSettings", _emailSettings == null ? null : _emailSettings.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("IMAP_POP3_email.ValidateServerDetails").withParams(params).execute(context);
	}
}